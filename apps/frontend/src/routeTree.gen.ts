/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticationRouteImport } from './routes/_authentication'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthenticationSignupRouteImport } from './routes/_authentication/signup'
import { Route as AuthenticationResetPasswordRouteImport } from './routes/_authentication/reset-password'
import { Route as AuthenticationLoginRouteImport } from './routes/_authentication/login'
import { Route as AuthenticationForgotPasswordRouteImport } from './routes/_authentication/forgot-password'
import { Route as AuthenticationConfirmSignupRouteImport } from './routes/_authentication/confirm-signup'

const AuthenticationRoute = AuthenticationRouteImport.update({
  id: '/_authentication',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticationSignupRoute = AuthenticationSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthenticationRoute,
} as any)
const AuthenticationResetPasswordRoute =
  AuthenticationResetPasswordRouteImport.update({
    id: '/reset-password',
    path: '/reset-password',
    getParentRoute: () => AuthenticationRoute,
  } as any)
const AuthenticationLoginRoute = AuthenticationLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthenticationRoute,
} as any)
const AuthenticationForgotPasswordRoute =
  AuthenticationForgotPasswordRouteImport.update({
    id: '/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => AuthenticationRoute,
  } as any)
const AuthenticationConfirmSignupRoute =
  AuthenticationConfirmSignupRouteImport.update({
    id: '/confirm-signup',
    path: '/confirm-signup',
    getParentRoute: () => AuthenticationRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/confirm-signup': typeof AuthenticationConfirmSignupRoute
  '/forgot-password': typeof AuthenticationForgotPasswordRoute
  '/login': typeof AuthenticationLoginRoute
  '/reset-password': typeof AuthenticationResetPasswordRoute
  '/signup': typeof AuthenticationSignupRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/confirm-signup': typeof AuthenticationConfirmSignupRoute
  '/forgot-password': typeof AuthenticationForgotPasswordRoute
  '/login': typeof AuthenticationLoginRoute
  '/reset-password': typeof AuthenticationResetPasswordRoute
  '/signup': typeof AuthenticationSignupRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authentication': typeof AuthenticationRouteWithChildren
  '/_authentication/confirm-signup': typeof AuthenticationConfirmSignupRoute
  '/_authentication/forgot-password': typeof AuthenticationForgotPasswordRoute
  '/_authentication/login': typeof AuthenticationLoginRoute
  '/_authentication/reset-password': typeof AuthenticationResetPasswordRoute
  '/_authentication/signup': typeof AuthenticationSignupRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/confirm-signup'
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/signup'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/confirm-signup'
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/signup'
  id:
    | '__root__'
    | '/'
    | '/_authentication'
    | '/_authentication/confirm-signup'
    | '/_authentication/forgot-password'
    | '/_authentication/login'
    | '/_authentication/reset-password'
    | '/_authentication/signup'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticationRoute: typeof AuthenticationRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authentication': {
      id: '/_authentication'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authentication/signup': {
      id: '/_authentication/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthenticationSignupRouteImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_authentication/reset-password': {
      id: '/_authentication/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof AuthenticationResetPasswordRouteImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_authentication/login': {
      id: '/_authentication/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthenticationLoginRouteImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_authentication/forgot-password': {
      id: '/_authentication/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof AuthenticationForgotPasswordRouteImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_authentication/confirm-signup': {
      id: '/_authentication/confirm-signup'
      path: '/confirm-signup'
      fullPath: '/confirm-signup'
      preLoaderRoute: typeof AuthenticationConfirmSignupRouteImport
      parentRoute: typeof AuthenticationRoute
    }
  }
}

interface AuthenticationRouteChildren {
  AuthenticationConfirmSignupRoute: typeof AuthenticationConfirmSignupRoute
  AuthenticationForgotPasswordRoute: typeof AuthenticationForgotPasswordRoute
  AuthenticationLoginRoute: typeof AuthenticationLoginRoute
  AuthenticationResetPasswordRoute: typeof AuthenticationResetPasswordRoute
  AuthenticationSignupRoute: typeof AuthenticationSignupRoute
}

const AuthenticationRouteChildren: AuthenticationRouteChildren = {
  AuthenticationConfirmSignupRoute: AuthenticationConfirmSignupRoute,
  AuthenticationForgotPasswordRoute: AuthenticationForgotPasswordRoute,
  AuthenticationLoginRoute: AuthenticationLoginRoute,
  AuthenticationResetPasswordRoute: AuthenticationResetPasswordRoute,
  AuthenticationSignupRoute: AuthenticationSignupRoute,
}

const AuthenticationRouteWithChildren = AuthenticationRoute._addFileChildren(
  AuthenticationRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticationRoute: AuthenticationRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
